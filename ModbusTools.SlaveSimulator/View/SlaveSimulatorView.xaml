<Window x:Class="ModbusTools.SlaveSimulator.View.SlaveSimulatorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:common="clr-namespace:ModbusTools.Common;assembly=ModbusTools.Common"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:view="clr-namespace:ModbusTools.Common.View;assembly=ModbusTools.Common"
        xmlns:viewModel="clr-namespace:ModbusTools.SlaveSimulator.ViewModel"
        Background="LightGray"
        DataContext="{x:Static viewModel:Locator.SlaveSimulator}"
        Title="Multiple Slave Simulator" Height="393" Width="577" Icon="/ModbusTools.SlaveSimulator;component/Images/Gear.png">

    <Window.Resources>
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin" Value="6"/>
        </Style>
    </Window.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ToolBar>
            <Button Command="{Binding Path=StartCommand}" ToolTip="Start simulating the slave device.">
                <common:AutoGreyableImage Source="/ModbusTools.SlaveSimulator;component/Images/Play.png" Width="16" />
            </Button>
            <Button Command="{Binding Path=StopCommand}" ToolTip="Stop simulating the slave device.">
                <common:AutoGreyableImage Source="/ModbusTools.SlaveSimulator;component/Images/Stop.png" Width="16" />
            </Button>
            <Separator/>

            <Grid>
                <CheckBox IsChecked="{Binding Path=OnlyShowTouched}" VerticalAlignment="Center" Margin="2" ToolTip="Check this box to display only registers that have been requested / written to.">Active Only?</CheckBox>
            </Grid>
            <Grid>
                <CheckBox IsChecked="{Binding Path=IsZeroBased}" VerticalAlignment="Center" Margin="2" ToolTip="Check this box to display registers with zero based numbering.">Is Zero Based?</CheckBox>
            </Grid>
        </ToolBar>

        <!--<Grid Grid.Row="1">
                <TabControl Margin="5">

                    <TabItem Header="Holding">
                        <DataGrid Grid.Row="2" Margin="4" AutoGenerateColumns="False" IsReadOnly="False" ItemsSource="{Binding Path=HoldingRegisters}" RowStyle="{StaticResource RowStyle}" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Register" Binding="{Binding Path=RegisterNumber}" IsReadOnly="True" CellStyle="{StaticResource RegisterDataGridlCellStyle}" />
                                <DataGridTextColumn Header="HEX" Binding="{Binding Path=Hex}" />
                                <DataGridTextColumn Header="Decimal" Binding="{Binding Path=Value}" />
                                <DataGridTextColumn Header="MSB" Binding="{Binding Path=MSB}" />
                                <DataGridTextColumn Header="LSB" Binding="{Binding Path=LSB}" />
                                <DataGridTextColumn Header="Binary" Binding="{Binding Path=Binary}" />
                                <DataGridTextColumn Header="Signed" Binding="{Binding Path=Signed}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>

                    <TabItem Header="Input">
                        <DataGrid Grid.Row="2" Margin="4" AutoGenerateColumns="False" IsReadOnly="False" ItemsSource="{Binding Path=InputRegisters}" RowStyle="{StaticResource RowStyle}" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Register" Binding="{Binding Path=RegisterNumber}" IsReadOnly="True" CellStyle="{StaticResource RegisterDataGridlCellStyle}" />
                                <DataGridTextColumn Header="HEX" Binding="{Binding Path=Hex}" />
                                <DataGridTextColumn Header="Decimal" Binding="{Binding Path=Value}" />
                                <DataGridTextColumn Header="MSB" Binding="{Binding Path=MSB}" />
                                <DataGridTextColumn Header="LSB" Binding="{Binding Path=LSB}" />
                                <DataGridTextColumn Header="Binary" Binding="{Binding Path=Binary}" />
                                <DataGridTextColumn Header="Signed" Binding="{Binding Path=Signed}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>

                    <TabItem Header="Activity">
                        <DataGrid ItemsSource="{Binding Path=ActivityLog}" IsReadOnly="True" RowStyle="{StaticResource RowStyle}" AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Timestamp" Binding="{Binding Path=Timestamp}"  />
                                <DataGridTextColumn Header="Type" Binding="{Binding Path=Type}" />
                                <DataGridTextColumn Header="R/W" Binding="{Binding Path=ReadWrite}" />
                                <DataGridTextColumn Header="Starting Address" Binding="{Binding Path=StartingAddress}" />
                                <DataGridTextColumn Header="Count" Binding="{Binding Path=Count}" />
                                <DataGridTextColumn Header="Data" Binding="{Binding Path=Data}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                </TabControl>
            </Grid>-->


        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <TextBlock Style="{StaticResource LabelStyle}">Adapter:</TextBlock>
            <view:ModbusAdapterSelector Grid.Column="1" DataContext="{Binding Path=ModbusAdapters}"/>
        </Grid>
    </Grid>

</Window>
