<Window x:Class="ModbusTools.SlaveViewer.View.RegisterViewerView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns:view="clr-namespace:ModbusTools.Common.View;assembly=ModbusTools.Common"
        Title="Modbus Register Viewer
        " Height="519" Width="865"
        Closed="RegisterViewerView_OnClosed"
        Background="{StaticResource WindowBackground}"
        Icon="/Images/Connection_Manager.png"
>

    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Control" Command="{Binding Path=SaveCommand}"></KeyBinding>
        <KeyBinding Key="F5" Command="{Binding Path=ReadCommand}"></KeyBinding>
    </Window.InputBindings>

    <Window.Resources>
        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Margin" Value="6"/>
        </Style>

        <Style TargetType="xctk:IntegerUpDown">
            <Setter Property="Margin" Value="4" />
        </Style>

    </Window.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        

        <Grid Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Menu>
                <MenuItem Header="_File">
                    <MenuItem Header="_Open..." Command="{Binding Path=OpenCommand}"></MenuItem>
                    <Separator />
                    <MenuItem Header="_Save" Command="{Binding Path=SaveCommand}" Visibility="Collapsed"/>
                    <MenuItem Header="Save _As..." Command="{Binding Path=SaveAsCommand}"/>
                    <MenuItem Header="Export" >
                        <MenuItem  Header="Export to CSV..." Command="{Binding Path=ExportToCsvCommand}" />
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="E_xit" Click="ExitMenuItem_OnClick" />
                </MenuItem>
                <MenuItem Header="_View">
                    <MenuItem Header="Refresh" Command="{Binding Path=ReadCommand}" InputGestureText="F5" />
                </MenuItem>
                <MenuItem Header="_Help">
                    <MenuItem Header="_About Modbus Register Viewer..." Command="{Binding Path=About.ShowCommand}" />
                </MenuItem>
            </Menu>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Style="{StaticResource LabelStyle}">Modbus Slave Id</TextBlock>
                <xctk:IntegerUpDown Minimum="0" Maximum="247"  Grid.Column="1" MinWidth="60" Value="{Binding Path=SlaveAddress}"/>

                <TextBlock Style="{StaticResource LabelStyle}" Grid.Column="0" Grid.Row="1">Starting Address</TextBlock>
                <xctk:IntegerUpDown Minimum="{Binding Path=StartingRegisterNumberMin}" Maximum="65536"  Grid.Column="1" Grid.Row="1" MinWidth="60" Value="{Binding Path=StartingRegisterNumber}" />

                <TextBlock Style="{StaticResource LabelStyle}" Grid.Column="4" Grid.Row="0">Block Size</TextBlock>
                <xctk:IntegerUpDown Minimum="1" Maximum="150"  Grid.Column="5" Grid.Row="0" MinWidth="60" Value="{Binding Path=BlockSize}" />

                <TextBlock Style="{StaticResource LabelStyle}" Grid.Column="4" Grid.Row="1">Number</TextBlock>
                <xctk:IntegerUpDown Minimum="1" Maximum="4000"  Grid.Column="5" Grid.Row="1" MinWidth="60" x:Name="NumberOfRegistersUpDown" Value="{Binding Path=NumberOfRegisters}" />

                <TextBlock Style="{StaticResource LabelStyle}" Grid.Column="6" Grid.Row="0">Type</TextBlock>
                <ComboBox x:Name="RegisterTypeComboBox" DisplayMemberPath="Display" Grid.Column="7" Margin="2" ItemsSource="{Binding Path=RegisterTypes}" SelectedItem="{Binding Path=RegisterType}" />

                <Button Grid.Column="8" Margin="4" MinWidth="100" Command="{Binding Path=ReadCommand}">Read</Button>
                <Button Grid.Column="8" Grid.Row="1" Margin="4" MinWidth="100" Command="{Binding Path=WriteCommand}">Write</Button>

                <CheckBox Grid.Column="9" Margin="4" VerticalAlignment="Center" Foreground="White" IsChecked="{Binding Path=IsAutoRefresh}" ToolTip="If checked, will only write the items that have been changed using individual write commands.">Auto Refresh</CheckBox>

                <CheckBox Grid.Column="9" Grid.Row="1" Margin="4" VerticalAlignment="Center" Foreground="White" IsChecked="{Binding Path=WriteIndividually}" Content="Write Individually">
                    <CheckBox.ToolTip>
                        <TextBlock>
                            If checked, only items that have been changed will be written.  Otherwise, all items in the current range will be written.
                        </TextBlock>
                    </CheckBox.ToolTip>
                </CheckBox>

                <CheckBox Grid.Column="10" VerticalAlignment="Center" IsChecked="{Binding Path=IsZeroBased}" Foreground="White">Is Zero Based?</CheckBox>

            </Grid>

            <DataGrid Grid.Row="2" Margin="4" AutoGenerateColumns="False" IsReadOnly="False" ItemsSource="{Binding Path=Registers}" RowStyle="{StaticResource RowStyle}" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" CanUserDeleteRows="False">
                <DataGrid.Columns>
                    <DataGridTemplateColumn IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image Source="/Images/126_Edit_16x16_72.png" Width="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=IsDirty}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Register" Binding="{Binding Path=RegisterNumber}" IsReadOnly="True" CellStyle="{StaticResource RegisterDataGridlCellStyle}" />
                    <DataGridTextColumn Header="HEX" Binding="{Binding Path=Hex}" />
                    <DataGridTextColumn Header="Decimal" Binding="{Binding Path=Value}" />
                    <DataGridTextColumn Header="MSB" Binding="{Binding Path=MSB}" />
                    <DataGridTextColumn Header="LSB" Binding="{Binding Path=LSB}" />
                    <DataGridTextColumn Header="Binary" Binding="{Binding Path=Binary}" />
                    <DataGridTextColumn Header="Signed" Binding="{Binding Path=Signed}" />
                    <DataGridTextColumn Header="Description" Binding="{Binding Path=Description}"/>
                </DataGrid.Columns>
            </DataGrid>

            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <TextBlock Style="{StaticResource LabelStyle}">Adapter:</TextBlock>

                <view:ModbusAdapterSelector Grid.Column="1" DataContext="{Binding Path=ModbusAdapters}" />
            </Grid>
        </Grid>
    </Grid>
</Window>
